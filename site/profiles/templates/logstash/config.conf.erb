input {
  beats {
    port => 5044
    type => "logs"
    ssl => false
    ssl_certificate => "<%= @server_certs %>"
    ssl_key => "<%= @private_key %>"
  }
  
  
  rabbitmq {
    #arguments => { "x-ha-policy" => "all" }
    user => 'logstash'
    password => 'logstash'
    durable => true
    exchange => 'exchangelogstash'
    host => ["<%= @rabbitmq_service %>"]
    key => 'logs.%{host}'
    port => 5672
    queue => 'queuelogstash'
    vhost => '/logstash'
  }
  
  
 
  
}

#filter {
#  if [type] == "syslog" {

    
    
#    grok {
#      match => { "message" => "%{DATA:message}({({[^}]+},?\s*)*})?\s*$(?<stacktrace>(?m:.*))" }
#      add_field => [ "received_at", "%{@timestamp}" ]
#      add_field => [ "received_from", "%{host}" ]
#    }
           
#    syslog_pri { }
#    date {
#      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
#    }
#  }
#}

output {
   elasticsearch {
    hosts => ["<%= @elastic_search_url %>"]
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
  }
  
  
  rabbitmq {
  	  exchange => "exchangelogstash"
  	  exchange_type => "topic"
  	  key => "logs.%{host}"
  	  workers => 2
  	  durable => true
  	  persistent => true
  	  user	=> "logstash"
  	  password => "logstash"
  	  host => ["<%= @rabbitmq_service %>"]
  	  port	=> 5672
  	  vhost => "/logstash"
	}
	stdout { codec => rubydebug }
}
 